{"version":3,"sources":["auth.js","components/Navbar.js","components/Permission.js","components/Items.js","components/Login.js","components/SignUp.js","components/OpsLog.js","components/Dbsetting.js","App.js","serviceWorker.js","index.js"],"names":["createAuthProvider","getAccessToken","onUpdateToken","token","fetch","process","method","body","refresh_token","then","r","json","useAuth","login","authFetch","logout","API","Navbar","showIt","columns","logged","useState","uname","setUname","localStorage","getItem","useEffect","headers","JSON","parse","res","rdata","ok","msg","hasOwnProperty","message","alert","status","catch","error","console","log","LogThisOut","className","to","type","id","state","href","onClick","Permission","users","setUsers","showAlert","setShowAlert","showError","setShowError","errorContent","setErrorContent","getUsers","data","forEach","element","editing","checkboxHandler","perm","map","user","permission","handleSubmit","find","x","stringify","Alert","variant","onClose","dismissible","rowspan","style","verticalAlign","fontWeight","colspan","textAlign","username","email","checked","onChange","e","ItemsPage","setId","alertContent","setAlertContent","alertVariant","setAlertVariant","setEditing","location","useLocation","items","setItems","fields","setFields","thisObj","setThisObj","preventDefault","getItems","key","new_obj","deleteItem","window","confirm","editItem","newObj","field","c_name","Form","Group","Control","target","value","placeholder","Button","item","LoginPage","useForm","register","reset","errors","formState","navigate","useNavigate","loginUser","requestOptions","access_token","Label","required","maxLength","color","minLength","password","as","SignUpPage","show","setShow","serverResponse","setServerResponse","submitForm","confirmPassword","onSubmit","OpsLog","logs","setLogs","getLogs","alog","timestamp","db_uri","tb_name","operation","ops_obj_id","request_body","DBForm","showItChange","columnsChange","uri","setUri","tablelist","setTablelist","setColumns","checkedColumns","setCheckedColumns","showTableList","setShowtablelist","showColumnList","setShowColumnList","curTable","setCurTable","connectDB","handleSelectTable","table_name","toggleHandler","column","index","Row","Col","xs","Dropdown","onSelect","Toggle","Menu","table","Item","eventKey","display","width","margin","c_type","arr","Object","values","filter","App","React","setShowIt","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74032eb0.chunk.js","sourcesContent":["import {createAuthProvider} from 'react-token-auth'\r\n\r\nconst API = process.env.REACT_APP_API;\r\n\r\nexport const {useAuth, authFetch, login, logout} =\r\n    createAuthProvider({\r\n        getAccessToken: 'access_token',\r\n        onUpdateToken: (token) => fetch(`${API}/refresh`, {\r\n            method: 'POST',\r\n            body: token.refresh_token\r\n        })\r\n        .then(r => r.json())\r\n    })","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuth, logout} from '../auth'\r\nimport { Tools } from 'react-bootstrap-icons';\r\n\r\nconst API = process.env.REACT_APP_API;\r\n\r\nexport const Navbar = ({showIt, columns}) => {\r\n  const [logged] = useAuth();\r\n  const [uname, setUname] = useState(\"\");\r\n\r\n  const token = localStorage.getItem('REACT_TOKEN_AUTH_KEY');\r\n\r\n  useEffect(() => {\r\n    // console.log(logged);\r\n    if(logged){\r\n      const token = localStorage.getItem('REACT_TOKEN_AUTH_KEY');\r\n      // console.log(token)\r\n  \r\n      fetch(`${API}/getUser`,{\r\n          method: 'GET',\r\n          headers: {\r\n              'content-type': 'application/json',\r\n              'Authorization': `Bearer ${JSON.parse(token)}`\r\n          }\r\n      })\r\n      .then(async res => {\r\n        const rdata =  await res.json();\r\n        if (res.ok) {\r\n          setUname(rdata.uname);\r\n        } else {\r\n          var msg = rdata.hasOwnProperty(\"message\")? rdata.message : rdata.msg\r\n          alert(`ERROR ${res.status}:  ${msg}`);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n    }\r\n  }, [logged]);\r\n\r\n  const LogThisOut = async () => {\r\n    const res = await fetch(`${API}/out`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': `Bearer ${JSON.parse(token)}`\r\n      }\r\n    });\r\n    logout();\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\"><Tools/>  DB CRUD Tool</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\"> \r\n          {showIt &&\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/it\" state={{ columns: columns }}>Table</Link>\r\n            </li>\r\n          }\r\n          {logged?\r\n          <>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/opslog\">Operations Log</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/perms\">Permissions</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\">Hi, {uname}!</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" href=\"#\" onClick={()=>LogThisOut()}>Log Out</a>\r\n            </li>\r\n          </>\r\n          :\r\n          <>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/login\">Log In</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/signup\">Sign Up</Link>\r\n            </li>\r\n          </>\r\n          }\r\n          \r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n  \r\n}\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst API = process.env.REACT_APP_API;\r\n\r\nexport const Permission = () => {\r\n\r\n  let [users, setUsers] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [showError, setShowError] = useState(false);\r\n  const [errorContent, setErrorContent] = useState(\"\");\r\n  \r\n\r\n  const token = localStorage.getItem('REACT_TOKEN_AUTH_KEY');\r\n\r\n  const getUsers = async () => {\r\n    const res = await fetch(`${API}/users`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': `Bearer ${JSON.parse(token)}`\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (res.ok) {\r\n      data.forEach(function (element) {\r\n        element.editing = 0;\r\n      });\r\n      setUsers(data);\r\n      // console.log(data);\r\n    } else {\r\n      setShowAlert(false);\r\n      setErrorContent(`ERROR ${res.status}:  ${data.message}`);\r\n      setShowError(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const checkboxHandler = (id, perm) => () => {\r\n    setUsers(\r\n      users.map(user => \r\n          (user.id === id && user.editing === 1)\r\n          ? {...user, permission : user.permission^perm} \r\n          : user \r\n    ));\r\n  };\r\n\r\n  const handleSubmit = async (id) => {\r\n    // console.log(id)\r\n    var editing = users.find(x => x.id === id).editing;\r\n    if (editing === 0) {\r\n      setUsers(\r\n        users.map(user => \r\n            (user.id === id)\r\n            ? {...user, editing : 1} \r\n            : user \r\n      ));\r\n    } else {\r\n        var permission = users.find(x => x.id === id).permission;\r\n        const res = await fetch(`${API}/perms/${id}`, {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            'Authorization': `Bearer ${JSON.parse(token)}`\r\n          },\r\n          body: JSON.stringify({permission:permission})\r\n        });\r\n        const data = await res.json();\r\n        if (res.ok) {\r\n          setUsers(\r\n            users.map(user => \r\n                (user.id === id)\r\n                ? {...user, editing : 0} \r\n                : user \r\n          ));\r\n          setShowAlert(true);\r\n        } else {\r\n          setShowAlert(false);\r\n          setErrorContent(`ERROR ${res.status}:  ${data.message}`);\r\n          setShowError(true);\r\n        }    \r\n    }\r\n      \r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n    { showAlert &&\r\n      <Alert variant=\"info\" onClose={() => setShowAlert(false)} dismissible>\r\n        <p>Successfully Updated!</p>\r\n      </Alert>\r\n    }\r\n    { showError &&\r\n      <Alert variant=\"danger\" onClose={() => setShowError(false)} dismissible>\r\n        <p>{errorContent}</p>\r\n      </Alert>\r\n    }\r\n    <div className=\"row\">\r\n      <div className=\"col\">\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr> \r\n              <td rowspan=\"2\" style={{verticalAlign:'middle',fontWeight: 'bold'}}>User Name</td>\r\n              <td rowspan=\"2\" style={{verticalAlign:'middle',fontWeight: 'bold'}}>Email</td>\r\n              <th colspan=\"5\" style={{textAlign:'center',fontWeight: 'bold'}}>Permissions</th>\r\n            </tr>\r\n            <tr>\r\n              <th>Read</th>\r\n              <th>Create</th>\r\n              <th>Update</th>\r\n              <th>Delete</th>\r\n              <th>Admin</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user.id}>\r\n                <td>{user.username}</td>\r\n                <td>{user.email}</td>\r\n                <td><input className=\"form-check-input\" checked={(user.permission & 0x01)} onChange={checkboxHandler(user.id, 0x01)} type=\"checkbox\"/></td>\r\n                <td><input className=\"form-check-input\" checked={(user.permission & 0x02)} onChange={checkboxHandler(user.id, 0x02)} type=\"checkbox\"/></td>\r\n                <td><input className=\"form-check-input\" checked={(user.permission & 0x04)} onChange={checkboxHandler(user.id, 0x04)} type=\"checkbox\"/></td>\r\n                <td><input className=\"form-check-input\" checked={(user.permission & 0x08)} onChange={checkboxHandler(user.id, 0x08)} type=\"checkbox\"/></td>\r\n                <td><input className=\"form-check-input\" checked={(user.permission & 0x80)} onChange={checkboxHandler(user.id, 0x80)} type=\"checkbox\"/></td>\r\n                <td>\r\n                  <button\r\n                    className={user.editing === 1 ? \"btn btn-danger btn-sm btn-block\" : \"btn btn-secondary btn-sm btn-block\"}\r\n                    onClick={(e) => handleSubmit(user.id)}\r\n                  > \r\n                    {user.editing === 1 ? \"Update\" : \"Edit\"}\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {useLocation} from 'react-router-dom';\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst API = process.env.REACT_APP_API;\r\n\r\nexport const ItemsPage = () => {\r\n  const [id, setId] = useState(\"\");\r\n\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [alertContent, setAlertContent] = useState(\"\");\r\n  const [alertVariant, setAlertVariant] = useState(\"\");\r\n\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const location = useLocation();\r\n\r\n  let [items, setItems] = useState([]);\r\n  let [fields, setFields] = useState([]);\r\n\r\n  const token = localStorage.getItem('REACT_TOKEN_AUTH_KEY');\r\n\r\n  let [thisObj, setThisObj] = useState({});\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!editing) {\r\n      const res = await fetch(`${API}/items`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': `Bearer ${JSON.parse(token)}`\r\n        },\r\n        body: JSON.stringify(thisObj)\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setShowAlert(false);\r\n        setAlertContent(\"Successfully Added!\");\r\n        setAlertVariant(\"info\");\r\n        setShowAlert(true);\r\n      } else {\r\n        setShowAlert(false);\r\n        setAlertContent(`ERROR ${res.status}:  ${data.message}`);\r\n        setAlertVariant(\"danger\");\r\n        setShowAlert(true);\r\n      }\r\n    } else {\r\n      const res = await fetch(`${API}/items/${id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': `Bearer ${JSON.parse(token)}`\r\n        },\r\n        body: JSON.stringify(thisObj)\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setEditing(false);\r\n        setId(\"\");\r\n        setShowAlert(false);\r\n        setAlertContent(\"Successfully Updated!\");\r\n        setAlertVariant(\"info\");\r\n        setShowAlert(true);\r\n      } else {\r\n        setShowAlert(false);\r\n        setAlertContent(`ERROR ${res.status}:  ${data.message}`);\r\n        setAlertVariant(\"danger\");\r\n        setShowAlert(true);\r\n      }\r\n      \r\n    }\r\n\r\n    await getItems();\r\n    var new_obj = {...thisObj};\r\n    for (const key in new_obj) {\r\n      new_obj[key]='';\r\n    }\r\n    setThisObj(new_obj);\r\n\r\n    // nameInput.current.focus();\r\n  };\r\n\r\n  const getItems = async () => {\r\n    const res = await fetch(`${API}/items`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': `Bearer ${JSON.parse(token)}`\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    setItems(data);\r\n    // console.log(data);\r\n  };\r\n\r\n  const deleteItem = async (id) => {\r\n    const userResponse = window.confirm(\"Are you sure you want to delete this record?\");\r\n    if (userResponse) {\r\n      const res = await fetch(`${API}/items/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': `Bearer ${JSON.parse(token)}`\r\n        }\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        await getItems();\r\n        setShowAlert(false);\r\n        setAlertContent(\"Successfully Deleted!\");\r\n        setAlertVariant(\"info\");\r\n        setShowAlert(true);\r\n      } else {\r\n        setShowAlert(false);\r\n        setAlertContent(`ERROR ${res.status}:  ${data.message}`);\r\n        setAlertVariant(\"danger\");\r\n        setShowAlert(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const editItem = async (id) => {\r\n    const res = await fetch(`${API}/items/${id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': `Bearer ${JSON.parse(token)}`\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (res.ok) {\r\n      setEditing(true);\r\n      setId(id);\r\n      // Reset\r\n      var newObj = {};\r\n      fields.forEach((field) => newObj[field.c_name] = data[field.c_name]);\r\n      setThisObj(newObj);\r\n    } else {\r\n      setShowAlert(false);\r\n      setAlertContent(`ERROR ${res.status}:  ${data.message}`);\r\n      setAlertVariant(\"danger\");\r\n      setShowAlert(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (location.state.hasOwnProperty(\"columns\")){\r\n      setFields(location.state.columns);\r\n    }\r\n    getItems();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    { showAlert &&\r\n        <Alert variant={alertVariant} onClose={() => setShowAlert(false)} dismissible>\r\n          <p>{alertContent}</p>\r\n        </Alert>\r\n    }\r\n    <div className=\"row\">\r\n      <div className=\"col-md-4\">\r\n        <form className=\"card card-body\">\r\n          {fields.map((field) => (\r\n            <>\r\n              <Form.Group>\r\n                <Form.Control\r\n                  type= \"text\"\r\n                  onChange={(e) => setThisObj({\r\n                    ...thisObj,\r\n                    [field.c_name]: e.target.value\r\n                })}\r\n                  value={thisObj[field.c_name]}\r\n                  placeholder={field.c_name}\r\n                />\r\n              </Form.Group>\r\n              <br></br>\r\n            </>\r\n            ))}\r\n          <Button variant=\"primary\" onClick={handleSubmit} >\r\n            {editing ? \"Update\" : \"Add\"}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              {fields.map((field) => (<th>{field.c_name}</th>))}\r\n              <th>Operations</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {items.map((item) => (\r\n              <tr key={item.id}>\r\n                {fields.map((field) => (<td>{item[field.c_name]}</td>))}\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-secondary btn-sm btn-block\"\r\n                    onClick={(e) => editItem(item.id)}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-danger btn-sm btn-block\"\r\n                    onClick={(e) => deleteItem(item.id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from 'react'\r\nimport {Form, Button, Alert} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport {useForm} from 'react-hook-form'\r\nimport { login } from '../auth'\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nconst API = process.env.REACT_APP_API;\r\n\r\nexport const LoginPage = () => {\r\n    \r\n    const {register,handleSubmit,reset,formState:{errors}}=useForm();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [showError, setShowError] = useState(false);\r\n    const [errorContent, setErrorContent] = useState(\"\");\r\n    \r\n    const loginUser = async (data) => {\r\n    // console.log(data)\r\n\r\n       const requestOptions={\r\n           method:\"POST\",\r\n           headers:{\r\n               'content-type':'application/json'\r\n           },\r\n           body:JSON.stringify(data)\r\n       };\r\n        \r\n       const res = await fetch(`${API}/login`,requestOptions);\r\n       const rdata = await res.json();\r\n       if (res.ok) {\r\n            login(rdata.access_token);\r\n            reset();\r\n            navigate('/',{state:{uname:data.username}});\r\n       } else {\r\n            setErrorContent(`ERROR ${res.status}:  ${rdata.message}`);\r\n            setShowError(true);\r\n       }\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n        <div className=\"form\">\r\n            { showError &&\r\n                <Alert variant=\"danger\" onClose={() => setShowError(false)} dismissible>\r\n                    <p>{errorContent}</p>\r\n                </Alert>\r\n            }\r\n            <h1>Login Page</h1>\r\n            <form>\r\n                <Form.Group>\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control type=\"text\"\r\n                        placeholder=\"Your username\"\r\n                        {...register('username',{required:true,maxLength:25})}\r\n                    />\r\n                </Form.Group>\r\n                {errors.username && <p style={{color:'red'}}><small>Username is required</small></p>}\r\n                {errors.username?.type === \"maxLength\" && <p style={{color:'red'}}><small>Max characters should be 25</small></p>}\r\n                <br></br>\r\n               \r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\"\r\n                        placeholder=\"Your password\"\r\n                        {...register('password',{required:true,minLength:8})}\r\n                    />\r\n                    {errors.username && <p style={{color:'red'}}><small>Password is required</small></p>}\r\n                    {errors.password?.type === \"minLength\" && <p style={{color:'red'}}>\r\n                        <small>Password should be more than 8 characters</small>\r\n                        </p>}\r\n                </Form.Group>\r\n                <br></br>\r\n                <Form.Group>\r\n                    <Button as=\"sub\" variant=\"primary\" onClick={handleSubmit(loginUser)}>Login</Button>\r\n                </Form.Group>\r\n                <br></br>\r\n                <Form.Group>\r\n                    <small>Do not have an account? <Link to='/signup'>Create One</Link></small>\r\n                </Form.Group>\r\n                \r\n            </form>\r\n        </div>\r\n    </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button, Alert } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nconst API = process.env.REACT_APP_API;\r\n\r\nexport const SignUpPage = () => {\r\n\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm();\r\n    const [show,setShow]=useState(false);\r\n    const [serverResponse,setServerResponse]=useState('');\r\n\r\n    const [showError, setShowError] = useState(false);\r\n    const [errorContent, setErrorContent] = useState(\"\");\r\n\r\n    const submitForm = async (data) => {\r\n        if (data.password === data.confirmPassword) {\r\n            const requestOptions = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                  username: data.username,\r\n                  email: data.email,\r\n                  password: data.password})\r\n            };\r\n\r\n            const res = await fetch(`${API}/signup`, requestOptions);\r\n            const rdata = await res.json();\r\n            if (res.ok) {\r\n                setServerResponse(rdata.message);\r\n                setShow(true);\r\n                reset();\r\n            } else {\r\n                setShow(false);\r\n                setErrorContent(`ERROR ${res.status}:  ${rdata.message}`);\r\n                setShowError(true);\r\n            }\r\n        }\r\n\r\n        else {\r\n            setShow(false);\r\n            setErrorContent(\"Passwords do not match\");\r\n            setShowError(true);\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"form\">\r\n               {show &&\r\n                <Alert variant=\"success\" onClose={() => {setShow(false)\r\n                }} dismissible>\r\n                    <p>{serverResponse}</p>\r\n                </Alert> \r\n               }\r\n               { showError &&\r\n                <Alert variant=\"danger\" onClose={() => setShowError(false)} dismissible>\r\n                    <p>{errorContent}</p>\r\n                </Alert>\r\n                }\r\n               <h1>Sign Up Page</h1>\r\n                <form onSubmit={handleSubmit(submitForm)}>\r\n                    <Form.Group>\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control type=\"text\"\r\n                            placeholder=\"Your username\"\r\n                            {...register(\"username\", { required: true, maxLength: 25 })}\r\n                        />\r\n\r\n                        {errors.username && <small style={{ color: \"red\" }}>Username is required</small>}\r\n                        {errors.username?.type === \"maxLength\" && <p style={{ color: \"red\" }}><small>Max characters should be 25 </small></p>}\r\n                    </Form.Group>\r\n                    <br></br>\r\n                    <Form.Group>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\"\r\n                            placeholder=\"Your email\"\r\n                            {...register(\"email\", { required: true, maxLength: 80 })}\r\n                        />\r\n\r\n                        {errors.email && <p style={{ color: \"red\" }}><small>Email is required</small></p>}\r\n\r\n                        {errors.email?.type === \"maxLength\" && <p style={{ color: \"red\" }}><small>Max characters should be 80</small></p>}\r\n                    </Form.Group>\r\n                    <br></br>\r\n                    <Form.Group>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\"\r\n                            placeholder=\"Your password\"\r\n                            {...register(\"password\", { required: true, minLength: 8 })}\r\n\r\n                        />\r\n\r\n                        {errors.password && <p style={{ color: \"red\" }}><small>Password is required</small></p>}\r\n                        {errors.password?.type === \"minLength\" && <p style={{ color: \"red\" }}><small>Min characters should be 8</small></p>}\r\n                    </Form.Group>\r\n                    <br></br>\r\n                    <Form.Group>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Your password\"\r\n                            {...register(\"confirmPassword\", { required: true, minLength: 8 })}\r\n                        />\r\n                        {errors.confirmPassword && <p style={{ color: \"red\" }}><small>Confirm Password is required</small></p>}\r\n                        {errors.confirmPassword?.type === \"minLength\" && <p style={{ color: \"red\" }}><small>Min characters should be 8</small></p>}\r\n                    </Form.Group>\r\n                    <br></br>\r\n                    <Form.Group>\r\n                        <Button type=\"submit\" variant=\"primary\">SignUp</Button>\r\n                    </Form.Group>\r\n                    <br></br>\r\n                    <Form.Group>\r\n                        <small>Already have an account, <Link to='/login'>Log In</Link></small>\r\n                    </Form.Group>\r\n                    <br></br>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst API = process.env.REACT_APP_API;\r\n\r\nexport const OpsLog = () => {\r\n\r\n  let [logs, setLogs] = useState([]);\r\n\r\n  const [showError, setShowError] = useState(false);\r\n  const [errorContent, setErrorContent] = useState(\"\");\r\n\r\n  const token = localStorage.getItem('REACT_TOKEN_AUTH_KEY');\r\n\r\n  const getLogs = async () => {\r\n    const res = await fetch(`${API}/logs`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': `Bearer ${JSON.parse(token)}`\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    if (res.ok) {\r\n      setLogs(data);\r\n    } else {\r\n      setErrorContent(`ERROR ${res.status}:  ${data.message}`);\r\n      setShowError(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLogs();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    { showError &&\r\n      <Alert variant=\"danger\" onClose={() => setShowError(false)} dismissible>\r\n        <p>{errorContent}</p>\r\n      </Alert>\r\n    }\r\n    <div className=\"row\">\r\n      <div className=\"col\">\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr style={{fontWeight: 'bold'}}>\r\n              <th>User Name</th>\r\n              <th>Timestamp</th>\r\n              <th>Database</th>\r\n              <th>Table Name</th>\r\n              <th>Operation</th>\r\n              <th>Operation Object ID</th>\r\n              <th>Request Body</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {logs.map((alog) => (\r\n              <tr key={alog.id}>\r\n                <td>{alog.username}</td>\r\n                <td>{alog.timestamp}</td>\r\n                <td>{alog.db_uri}</td>\r\n                <td>{alog.tb_name}</td>\r\n                <td>{alog.operation}</td>\r\n                <td>{alog.ops_obj_id}</td>\r\n                <td>{alog.request_body}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from 'react'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {Form, Button, Dropdown, Alert} from 'react-bootstrap'\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst API = process.env.REACT_APP_API;\r\n\r\nexport const DBForm = ({showItChange, columnsChange}) => {\r\n    \r\n    const [uri, setUri] = useState(\"\");\r\n    const [tablelist, setTablelist] = useState([]);\r\n    const [columns, setColumns] = useState([]);\r\n    const [checkedColumns, setCheckedColumns] = useState({});\r\n\r\n    const [showTableList, setShowtablelist] = useState(false);\r\n    const [showColumnList, setShowColumnList] = useState(false);\r\n\r\n    const [curTable, setCurTable] = useState(\"Table Name\");\r\n\r\n    const [showError, setShowError] = useState(false);\r\n    const [errorContent, setErrorContent] = useState(\"\");\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const token = localStorage.getItem('REACT_TOKEN_AUTH_KEY');\r\n\r\n    const connectDB = async (e) => {\r\n        e.preventDefault();\r\n        // console.log(data);\r\n\r\n        const res = await fetch(`${API}/dbset`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              'Authorization': `Bearer ${JSON.parse(token)}`\r\n            },\r\n            body: JSON.stringify({\r\n                uri:uri\r\n            }),\r\n          });\r\n        const data = await res.json();\r\n        if (res.ok) {\r\n            setTablelist(data);\r\n            setShowtablelist(true);\r\n        } else {\r\n            setErrorContent(`ERROR ${res.status}:  ${data.message}`);\r\n            setShowError(true);\r\n        }\r\n    }\r\n\r\n    const handleSelectTable = async (e) => {\r\n        // console.log(e);\r\n        setCurTable(e);\r\n        const res = await fetch(`${API}/tbset`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              'Authorization': `Bearer ${JSON.parse(token)}`\r\n            },\r\n            body: JSON.stringify({\r\n                table_name:e\r\n            }),\r\n        });\r\n        const data = await res.json();\r\n        if (res.ok) {\r\n            setColumns(data);\r\n            setShowColumnList(true);\r\n        } else {\r\n            setErrorContent(`ERROR ${res.status}:  ${data.message}`);\r\n            setShowError(true);\r\n        }\r\n    }\r\n\r\n    const toggleHandler = (column, index) => () => {\r\n        setCheckedColumns({\r\n            ...checkedColumns,\r\n            [index]: checkedColumns[index] ? null : column\r\n        });\r\n    }\r\n\r\n    const toNextPage = (e) => {\r\n        var arr = Object.values(checkedColumns).filter(e => {\r\n            return e !== null;\r\n        }); \r\n        // console.log(arr);\r\n        showItChange(true);\r\n        columnsChange(arr);\r\n        navigate('/it',{state:{columns:arr}});\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div>\r\n                { showError &&\r\n                    <Alert variant=\"danger\" onClose={() => setShowError(false)} dismissible>\r\n                        <p>{errorContent}</p>\r\n                    </Alert>\r\n                }\r\n                <h1>Database Setting</h1>\r\n                <br></br>\r\n                <Form>\r\n                    <Row className=\"align-items-center\">\r\n                        <Col xs=\"auto\">\r\n                            <Form.Label>URI:</Form.Label>\r\n                        </Col>\r\n                        <Col xs=\"auto\">\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"sqlite:///myweb.db\"\r\n                                onChange={(e) => setUri(e.target.value)}\r\n                                value={uri}\r\n                            />\r\n                        </Col>\r\n                        <Col xs=\"auto\">\r\n                            <Button variant=\"primary\" onClick={connectDB}>Connect</Button>\r\n                        </Col>     \r\n                    </Row>\r\n                    <br></br>\r\n                    {showTableList &&\r\n                        <Form.Group>\r\n                            <Dropdown onSelect={handleSelectTable}>\r\n                                <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                                    {curTable}\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                    {tablelist.map((table) => (\r\n                                        <Dropdown.Item eventKey={table}>{table}</Dropdown.Item>\r\n                                    ))}                            \r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </Form.Group>\r\n                    }\r\n\r\n                    {showColumnList &&\r\n                        <Form.Group>\r\n                            {columns.map((column, index) => (\r\n                                <tr\r\n                                    key={index}\r\n                                    style={{\r\n                                    display: \"flex\",\r\n                                    width: \"150px\"\r\n                                    }}\r\n                                >\r\n                                    <input\r\n                                    onChange={toggleHandler(column, index)}\r\n                                    checked={checkedColumns[index]}\r\n                                    style={{ margin: \"20px\" }}\r\n                                    type=\"checkbox\"\r\n                                    />\r\n                                    <td style={{ margin: \"20px\" }}>{column.c_name}</td>\r\n                                    <td style={{ margin: \"20px\" }}>{column.c_type}</td>\r\n                                </tr>\r\n                            ))}\r\n                            <br></br>\r\n                            <Button variant=\"primary\" onClick={toNextPage}>Next</Button>\r\n                        </Form.Group>\r\n                    }\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\nimport { Navbar } from \"./components/Navbar\";\r\nimport { Permission } from \"./components/Permission\";\r\nimport { ItemsPage } from \"./components/Items\";\r\nimport { LoginPage } from \"./components/Login\";\r\nimport { SignUpPage } from \"./components/SignUp\";\r\nimport { OpsLog } from \"./components/OpsLog\";\r\nimport { DBForm } from \"./components/Dbsetting\";\r\n\r\nfunction App() {\r\n  const [showIt, setShowIt] = React.useState(false);\r\n  const [columns, setColumns] = React.useState([]);\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar showIt={showIt} columns={columns}/>\r\n      <div className=\"container p-4\">\r\n        <Routes>\r\n          <Route path=\"/perms\" element={<Permission/>} />\r\n          <Route path=\"/login\" element={<LoginPage/>} />\r\n          <Route path=\"/signup\" element={<SignUpPage/>} />\r\n          <Route path=\"/it\" element={<ItemsPage/>} />\r\n          <Route path=\"/\" element={<DBForm showItChange={setShowIt} columnsChange={setColumns}/>} />\r\n          <Route path=\"/opslog\" element={<OpsLog/>} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import 'bootswatch/dist/lux/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}